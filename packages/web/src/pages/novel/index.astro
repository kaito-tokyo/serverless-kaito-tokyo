---
import fetchApi from "../../lib/strapi.js";
import type { Novel } from "../../interfaces/Novel.js";

const novels = await fetchApi<Novel[]>({
  endpoint: "novels?sort=Date:desc",
  wrappedByKey: "data",
});

import { groupByMonth } from "../../lib/group-by-month.js";
const groupedNovels = groupByMonth(novels);
---

<!doctype html>
<html lang="ja-JP">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>小説 - kaito.tokyo</title>
  </head>
  <body>
    <main>
      <h1>小説</h1>
      {
        Object.entries(groupedNovels).map(([month, novelsInMonth]) => (
          <section>
            <h2>
              {(() => {
                const [year, monthStr] = month.split("-");
                // Validate year and monthStr
                if (
                  typeof year === "string" &&
                  typeof monthStr === "string" &&
                  /^\d{4}$/.test(year) &&
                  /^\d{1,2}$/.test(monthStr) &&
                  !Number.isNaN(Number(year)) &&
                  !Number.isNaN(Number(monthStr))
                ) {
                  const date = new Date(Number(year), Number(monthStr) - 1, 1);
                  return date.toLocaleString("ja-JP", {
                    year: "numeric",
                    month: "long",
                  });
                } else {
                  // Fallback: show raw month string or "Invalid date"
                  return month || "Invalid date";
                }
              })()}
            </h2>
            <ul>
              {novelsInMonth.map((novel) => (
                <li>
                  <a href={`/novel/${novel.slug}`}>
                    <h3>{novel.Title}</h3>
                  </a>
                </li>
              ))}
            </ul>
          </section>
        ))
      }
    </main>
  </body>
</html>
