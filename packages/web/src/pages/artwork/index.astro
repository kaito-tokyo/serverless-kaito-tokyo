---
import Layout from "../../layouts/Layout.astro";
import fetchApi from "../../lib/strapi.js";
import type { Artwork } from "../../interfaces/Artwork.js";
import { groupByMonth } from "../../lib/group-by-month.js";
import { formatMonthForDisplay } from "../../lib/format-month.js";
import ArtworkCard from "../../components/ArtworkCard.astro";

const artworks = await fetchApi<Artwork[]>({
  endpoint: "artworks",
  query: {
    "populate": "*",
    "sort": "Date:desc",
  },
  wrappedByKey: "data",
});

const groupedArtworks = groupByMonth(artworks);

const monthlyArtworks = Array.from(groupedArtworks.entries())
  .map(([month, artworksInMonth]) => {
    const processedArtworks = artworksInMonth
      .map((artwork) => {
        if (
          !artwork.SdrImage?.url ||
          !artwork.SdrImage.width ||
          !(artwork.SdrImage.width > 0) ||
          !artwork.SdrImage.height ||
          !(artwork.SdrImage.height > 0)
        ) {
          return null;
        }
        return {
          ...artwork,
          displayHeight:
            (200 / artwork.SdrImage.width) * artwork.SdrImage.height,
        };
      })
      .filter((artwork) => artwork !== null);

    return {
      formattedMonth: formatMonthForDisplay(month),
      artworks: processedArtworks,
    };
  })
  .filter((group) => group.artworks.length > 0);
---

<Layout title="イラスト - kaito.tokyo">
  <h1>イラスト - Kaito.tokyo</h1>
  {
    monthlyArtworks.map(({ formattedMonth, artworks }) => (
      <section>
        <h2>{formattedMonth}</h2>
        <ul>
          {artworks.map((artwork) => (
            <ArtworkCard artwork={artwork} />
          ))}
        </ul>
      </section>
    ))
  }
</Layout>

<style>
  ul {
    display: flex;
    flex-wrap: wrap;
    list-style: none;
    margin: 0;
    padding: 0;
    gap: 8px;
  }
</style>
